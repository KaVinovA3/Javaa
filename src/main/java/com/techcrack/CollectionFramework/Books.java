package com.techcrack.CollectionFramework;

import java.util.Objects;


/*
    * It is a class Books that stores the attributes of the Books.
    * Such as ISBN number, title of the book, author name and price of the book.
    * The Attributes are encapsulated, and we can read and modify using POJO's.
    * There was a parameterized Constructor that initializes the instance attributes.
    * Overriding the equals, hashcode methods to ensure object consistency.
    * Overriding the toString method to print the object used.
    * If we do not override the toString, it will print the hashCode of the object.
 */
public class Books {

    //Book Attributes

    //International standard Book Number it is a number used to identify the book uniquely.
    private String ISBN = null;

    //Book title
    private String title = null;

    // Author Name
    private String author = null;

    // Price Of the Book
    private double price = 0.00;

    // Parameterized Constructor to initialize instance variable
    public Books(String ISBN, String title, String author, double price){
        this.ISBN = ISBN;
        this.title = title;
        this.author = author;
        this.price = price;
    }

    //POJO for ISBN
    public String getISBN(){
        return ISBN;
    }

    public void setISBN(String ISBN){
        this.ISBN = ISBN;
    }

    //Pojo for the Title of a book
    public String getTitle(){
        return title;
    }

    public void setTitle(String title){
        this.title = title;
    }

    //Pojo for Author
    public String getAuthor(){
        return author;
    }

    public void setAuthor(String author){
        this.author = author;
    }

    //Pojo for price
    public double getPrice(){
        return price;
    }

    public void setPrice(double price){
        this.price = price;
    }

    // Overriding the toString means changing the behaviour toString generated by the Object class
    @Override
    public String toString(){
        return "ISBN Number : " + ISBN + " Title  : " + title + " Author : " + author + " Price : " + price;
    }


    //Overriding the equals method to compare the objects based on the attributes
    @Override
    public boolean equals(Object o){
        if(o == null)
            throw new ExceptionInInitializerError("Empty Object Cannot be compared !!!!");
        Book book = (Book)o;

        return book.getISBN().equals(this.ISBN) && book.getTitle().equals(this.title) &&
                book.getAuthor().equals(this.author);
    }

    //HashCode is Override to avoid the duplicate Objects
     @Override
    public int hashCode(){
        return Objects.hash(ISBN);
     }

}
